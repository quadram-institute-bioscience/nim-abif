nimTitle	abimerge	abimerge.html	module src/abimerge		0
nim	swAlignment	abimerge.html#swAlignment	object swAlignment		40
nim	swWeights	abimerge.html#swWeights	object swWeights		51
nim	swDefaults	abimerge.html#swDefaults	let swDefaults		60
nim	reverseString	abimerge.html#reverseString,string	proc reverseString(str: string): string		69
nim	makeMatrix	abimerge.html#makeMatrix,int,int,T	proc makeMatrix[T](rows, cols: int; initValue: T): seq[seq[T]]		71
nim	simpleSmithWaterman	abimerge.html#simpleSmithWaterman,string,string,swWeights	proc simpleSmithWaterman(alpha, beta: string; weights: swWeights): swAlignment		85
nim	translateIUPAC	abimerge.html#translateIUPAC,char	proc translateIUPAC(c: char): char		204
nim	matchIUPAC	abimerge.html#matchIUPAC,char,char	proc matchIUPAC(a, b: char): bool		216
nim	revcompl	abimerge.html#revcompl,string	proc revcompl(s: string): string		250
nim	Config	abimerge.html#Config	object Config		257
nim	mergeSequences	abimerge.html#mergeSequences,string,seq[int],string,seq[int],Config	proc mergeSequences(forwardSeq: string; forwardQual: seq[int]; reverseSeq: string;\n               reverseQual: seq[int]; config: Config): tuple[seq: string,\n    qual: seq[int]]		434
